spring:
  application:
    name:
      twitter-to-kafka-service
server:
  port: 8181
twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Spring
    - Kafka
    - ElasticSearch
  enable-v2-tweets: true
  enable-mock-tweets: true
  mock-min-tweet-length: 5
  mock-max-tweet-length: 15
  mock-sleep-ms: 5000
  twitter-v2-base-url: https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at&expansions=author_id
  twitter-v2-rules-base-url: https://api.twitter.com/2/tweets/search/stream/rules
  twitter-v2-bearer-token: ${TWITTER_BEARER_TOKEN}
retry-config:
  initial-interval-ms: 1000
  max-interval-ms: 10000
  multiplier: 2.0
  maxAttempts: 3
  sleep-time-ms: 2000
kafka-config:
  bootstrap-servers: rlaalstjr99.ddns.net:19092, rlaalstjr99.ddns.net:29092, rlaalstjr99.ddns.net:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://rlaalstjr99.ddns.net:8080
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
  num-of-partitions: 3
  replication-factor: 3
kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5
logging:
  level:
    root: INFO